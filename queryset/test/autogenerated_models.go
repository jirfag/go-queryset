// Code generated by go-queryset. DO NOT EDIT.
package test

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
	"github.com/jirfag/go-queryset/queryset/tmp"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set BlogQuerySet

// BlogQuerySet is an queryset type for Blog
type BlogQuerySet struct {
	db *gorm.DB
}

// NewBlogQuerySet constructs new BlogQuerySet
func NewBlogQuerySet(db *gorm.DB) BlogQuerySet {
	return BlogQuerySet{
		db: db.Model(&Blog{}),
	}
}

func (qs BlogQuerySet) w(db *gorm.DB) BlogQuerySet {
	return NewBlogQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) All(ret *[]Blog) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Blog) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtEq(createdAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtGt(createdAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtGte(createdAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtLt(createdAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtLte(createdAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtNe(createdAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) Delete() error {
	return qs.db.Delete(Blog{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Blog) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtEq(deletedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtGt(deletedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtGte(deletedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtIsNotNull() BlogQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtIsNull() BlogQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtLt(deletedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtLte(deletedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtNe(deletedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) GetUpdater() BlogUpdater {
	return NewBlogUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDEq(ID uint) BlogQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDGt(ID uint) BlogQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDGte(ID uint) BlogQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDIn(ID ...uint) BlogQuerySet {
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDLt(ID uint) BlogQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDLte(ID uint) BlogQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDNe(ID uint) BlogQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDNotIn(ID ...uint) BlogQuerySet {
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) Limit(limit int) BlogQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) NameEq(name string) BlogQuerySet {
	return qs.w(qs.db.Where("myname = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) NameIn(name ...string) BlogQuerySet {
	return qs.w(qs.db.Where("myname IN (?)", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) NameNe(name string) BlogQuerySet {
	return qs.w(qs.db.Where("myname != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) NameNotIn(name ...string) BlogQuerySet {
	return qs.w(qs.db.Where("myname NOT IN (?)", name))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs BlogQuerySet) One(ret *Blog) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderAscByCreatedAt() BlogQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderAscByDeletedAt() BlogQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderAscByID() BlogQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderAscByUpdatedAt() BlogQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderDescByCreatedAt() BlogQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderDescByDeletedAt() BlogQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderDescByID() BlogQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderDescByUpdatedAt() BlogQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u BlogUpdater) SetCreatedAt(createdAt time.Time) BlogUpdater {
	u.fields[string(BlogDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u BlogUpdater) SetDeletedAt(deletedAt *time.Time) BlogUpdater {
	u.fields[string(BlogDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u BlogUpdater) SetID(ID uint) BlogUpdater {
	u.fields[string(BlogDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u BlogUpdater) SetName(name string) BlogUpdater {
	u.fields[string(BlogDBSchema.Name)] = name
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u BlogUpdater) SetUpdatedAt(updatedAt time.Time) BlogUpdater {
	u.fields[string(BlogDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u BlogUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u BlogUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtEq(updatedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtGt(updatedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtGte(updatedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtLt(updatedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtLte(updatedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtNe(updatedAt time.Time) BlogQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set BlogQuerySet

// ===== BEGIN of Blog modifiers

// BlogDBSchemaField describes database schema field. It requires for method 'Update'
type BlogDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f BlogDBSchemaField) String() string {
	return string(f)
}

// BlogDBSchema stores db field names of Blog
var BlogDBSchema = struct {
	ID        BlogDBSchemaField
	CreatedAt BlogDBSchemaField
	UpdatedAt BlogDBSchemaField
	DeletedAt BlogDBSchemaField
	Name      BlogDBSchemaField
}{

	ID:        BlogDBSchemaField("id"),
	CreatedAt: BlogDBSchemaField("created_at"),
	UpdatedAt: BlogDBSchemaField("updated_at"),
	DeletedAt: BlogDBSchemaField("deleted_at"),
	Name:      BlogDBSchemaField("myname"),
}

// Update updates Blog fields by primary key
// nolint: dupl
func (o *Blog) Update(db *gorm.DB, fields ...BlogDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"myname":     o.Name,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Blog %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// BlogUpdater is an Blog updates manager
type BlogUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewBlogUpdater creates new Blog updater
// nolint: dupl
func NewBlogUpdater(db *gorm.DB) BlogUpdater {
	return BlogUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Blog{}),
	}
}

// ===== END of Blog modifiers

// ===== BEGIN of query set CheckReservedKeywordsQuerySet

// CheckReservedKeywordsQuerySet is an queryset type for CheckReservedKeywords
type CheckReservedKeywordsQuerySet struct {
	db *gorm.DB
}

// NewCheckReservedKeywordsQuerySet constructs new CheckReservedKeywordsQuerySet
func NewCheckReservedKeywordsQuerySet(db *gorm.DB) CheckReservedKeywordsQuerySet {
	return CheckReservedKeywordsQuerySet{
		db: db.Model(&CheckReservedKeywords{}),
	}
}

func (qs CheckReservedKeywordsQuerySet) w(db *gorm.DB) CheckReservedKeywordsQuerySet {
	return NewCheckReservedKeywordsQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) All(ret *[]CheckReservedKeywords) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *CheckReservedKeywords) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *CheckReservedKeywords) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) Delete() error {
	return qs.db.Delete(CheckReservedKeywords{}).Error
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) GetUpdater() CheckReservedKeywordsUpdater {
	return NewCheckReservedKeywordsUpdater(qs.db)
}

// Limit is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) Limit(limit int) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs CheckReservedKeywordsQuerySet) One(ret *CheckReservedKeywords) error {
	return qs.db.First(ret).Error
}

// OrderAscByStruct is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) OrderAscByStruct() CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Order("struct ASC"))
}

// OrderDescByStruct is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) OrderDescByStruct() CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Order("struct DESC"))
}

// SetStruct is an autogenerated method
// nolint: dupl
func (u CheckReservedKeywordsUpdater) SetStruct(structValue int) CheckReservedKeywordsUpdater {
	u.fields[string(CheckReservedKeywordsDBSchema.Struct)] = structValue
	return u
}

// SetType is an autogenerated method
// nolint: dupl
func (u CheckReservedKeywordsUpdater) SetType(typeValue string) CheckReservedKeywordsUpdater {
	u.fields[string(CheckReservedKeywordsDBSchema.Type)] = typeValue
	return u
}

// StructEq is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) StructEq(structValue int) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("struct = ?", structValue))
}

// StructGt is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) StructGt(structValue int) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("struct > ?", structValue))
}

// StructGte is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) StructGte(structValue int) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("struct >= ?", structValue))
}

// StructIn is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) StructIn(structValue ...int) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("struct IN (?)", structValue))
}

// StructLt is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) StructLt(structValue int) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("struct < ?", structValue))
}

// StructLte is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) StructLte(structValue int) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("struct <= ?", structValue))
}

// StructNe is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) StructNe(structValue int) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("struct != ?", structValue))
}

// StructNotIn is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) StructNotIn(structValue ...int) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("struct NOT IN (?)", structValue))
}

// TypeEq is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) TypeEq(typeValue string) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("type = ?", typeValue))
}

// TypeIn is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) TypeIn(typeValue ...string) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("type IN (?)", typeValue))
}

// TypeNe is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) TypeNe(typeValue string) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("type != ?", typeValue))
}

// TypeNotIn is an autogenerated method
// nolint: dupl
func (qs CheckReservedKeywordsQuerySet) TypeNotIn(typeValue ...string) CheckReservedKeywordsQuerySet {
	return qs.w(qs.db.Where("type NOT IN (?)", typeValue))
}

// Update is an autogenerated method
// nolint: dupl
func (u CheckReservedKeywordsUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u CheckReservedKeywordsUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set CheckReservedKeywordsQuerySet

// ===== BEGIN of CheckReservedKeywords modifiers

// CheckReservedKeywordsDBSchemaField describes database schema field. It requires for method 'Update'
type CheckReservedKeywordsDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f CheckReservedKeywordsDBSchemaField) String() string {
	return string(f)
}

// CheckReservedKeywordsDBSchema stores db field names of CheckReservedKeywords
var CheckReservedKeywordsDBSchema = struct {
	Type   CheckReservedKeywordsDBSchemaField
	Struct CheckReservedKeywordsDBSchemaField
}{

	Type:   CheckReservedKeywordsDBSchemaField("type"),
	Struct: CheckReservedKeywordsDBSchemaField("struct"),
}

// Update updates CheckReservedKeywords fields by primary key
// nolint: dupl
func (o *CheckReservedKeywords) Update(db *gorm.DB, fields ...CheckReservedKeywordsDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"type":   o.Type,
		"struct": o.Struct,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update CheckReservedKeywords %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// CheckReservedKeywordsUpdater is an CheckReservedKeywords updates manager
type CheckReservedKeywordsUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewCheckReservedKeywordsUpdater creates new CheckReservedKeywords updater
// nolint: dupl
func NewCheckReservedKeywordsUpdater(db *gorm.DB) CheckReservedKeywordsUpdater {
	return CheckReservedKeywordsUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&CheckReservedKeywords{}),
	}
}

// ===== END of CheckReservedKeywords modifiers

// ===== BEGIN of query set PostQuerySet

// PostQuerySet is an queryset type for Post
type PostQuerySet struct {
	db *gorm.DB
}

// NewPostQuerySet constructs new PostQuerySet
func NewPostQuerySet(db *gorm.DB) PostQuerySet {
	return PostQuerySet{
		db: db.Model(&Post{}),
	}
}

func (qs PostQuerySet) w(db *gorm.DB) PostQuerySet {
	return NewPostQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) All(ret *[]Post) error {
	return qs.db.Find(ret).Error
}

// BlogIsNotNull is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) BlogIsNotNull() PostQuerySet {
	return qs.w(qs.db.Where("blog IS NOT NULL"))
}

// BlogIsNull is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) BlogIsNull() PostQuerySet {
	return qs.w(qs.db.Where("blog IS NULL"))
}

// Count is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Post) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtEq(createdAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtGt(createdAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtGte(createdAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtLt(createdAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtLte(createdAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtNe(createdAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Post) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) Delete() error {
	return qs.db.Delete(Post{}).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtEq(deletedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtGt(deletedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtGte(deletedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtIsNotNull() PostQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtIsNull() PostQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtLt(deletedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtLte(deletedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtNe(deletedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) GetUpdater() PostUpdater {
	return NewPostUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDEq(ID uint) PostQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDGt(ID uint) PostQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDGte(ID uint) PostQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDIn(ID ...uint) PostQuerySet {
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDLt(ID uint) PostQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDLte(ID uint) PostQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDNe(ID uint) PostQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDNotIn(ID ...uint) PostQuerySet {
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) Limit(limit int) PostQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs PostQuerySet) One(ret *Post) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderAscByCreatedAt() PostQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderAscByDeletedAt() PostQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderAscByID() PostQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderAscByUpdatedAt() PostQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderDescByCreatedAt() PostQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderDescByDeletedAt() PostQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderDescByID() PostQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderDescByUpdatedAt() PostQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PreloadBlog is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) PreloadBlog() PostQuerySet {
	return qs.w(qs.db.Preload("Blog"))
}

// PreloadUser is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) PreloadUser() PostQuerySet {
	return qs.w(qs.db.Preload("User"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u PostUpdater) SetCreatedAt(createdAt time.Time) PostUpdater {
	u.fields[string(PostDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u PostUpdater) SetDeletedAt(deletedAt *time.Time) PostUpdater {
	u.fields[string(PostDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u PostUpdater) SetID(ID uint) PostUpdater {
	u.fields[string(PostDBSchema.ID)] = ID
	return u
}

// SetStr is an autogenerated method
// nolint: dupl
func (u PostUpdater) SetStr(str tmp.StringDef) PostUpdater {
	u.fields[string(PostDBSchema.Str)] = str
	return u
}

// SetTitle is an autogenerated method
// nolint: dupl
func (u PostUpdater) SetTitle(title *string) PostUpdater {
	u.fields[string(PostDBSchema.Title)] = title
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u PostUpdater) SetUpdatedAt(updatedAt time.Time) PostUpdater {
	u.fields[string(PostDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUser is an autogenerated method
// nolint: dupl
func (u PostUpdater) SetUser(user User) PostUpdater {
	u.fields[string(PostDBSchema.User)] = user
	return u
}

// StrEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) StrEq(str tmp.StringDef) PostQuerySet {
	return qs.w(qs.db.Where("str = ?", str))
}

// StrIn is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) StrIn(str ...tmp.StringDef) PostQuerySet {
	return qs.w(qs.db.Where("str IN (?)", str))
}

// StrNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) StrNe(str tmp.StringDef) PostQuerySet {
	return qs.w(qs.db.Where("str != ?", str))
}

// StrNotIn is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) StrNotIn(str ...tmp.StringDef) PostQuerySet {
	return qs.w(qs.db.Where("str NOT IN (?)", str))
}

// TitleEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) TitleEq(title string) PostQuerySet {
	return qs.w(qs.db.Where("title = ?", title))
}

// TitleIn is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) TitleIn(title ...string) PostQuerySet {
	return qs.w(qs.db.Where("title IN (?)", title))
}

// TitleIsNotNull is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) TitleIsNotNull() PostQuerySet {
	return qs.w(qs.db.Where("title IS NOT NULL"))
}

// TitleIsNull is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) TitleIsNull() PostQuerySet {
	return qs.w(qs.db.Where("title IS NULL"))
}

// TitleNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) TitleNe(title string) PostQuerySet {
	return qs.w(qs.db.Where("title != ?", title))
}

// TitleNotIn is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) TitleNotIn(title ...string) PostQuerySet {
	return qs.w(qs.db.Where("title NOT IN (?)", title))
}

// Update is an autogenerated method
// nolint: dupl
func (u PostUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u PostUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtEq(updatedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtGt(updatedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtGte(updatedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtLt(updatedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtLte(updatedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtNe(updatedAt time.Time) PostQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set PostQuerySet

// ===== BEGIN of Post modifiers

// PostDBSchemaField describes database schema field. It requires for method 'Update'
type PostDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f PostDBSchemaField) String() string {
	return string(f)
}

// PostDBSchema stores db field names of Post
var PostDBSchema = struct {
	ID        PostDBSchemaField
	CreatedAt PostDBSchemaField
	UpdatedAt PostDBSchemaField
	DeletedAt PostDBSchemaField
	Blog      PostDBSchemaField
	User      PostDBSchemaField
	Title     PostDBSchemaField
	Str       PostDBSchemaField
}{

	ID:        PostDBSchemaField("id"),
	CreatedAt: PostDBSchemaField("created_at"),
	UpdatedAt: PostDBSchemaField("updated_at"),
	DeletedAt: PostDBSchemaField("deleted_at"),
	Blog:      PostDBSchemaField("blog"),
	User:      PostDBSchemaField("user"),
	Title:     PostDBSchemaField("title"),
	Str:       PostDBSchemaField("str"),
}

// Update updates Post fields by primary key
// nolint: dupl
func (o *Post) Update(db *gorm.DB, fields ...PostDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"blog":       o.Blog,
		"user":       o.User,
		"title":      o.Title,
		"str":        o.Str,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Post %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// PostUpdater is an Post updates manager
type PostUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewPostUpdater creates new Post updater
// nolint: dupl
func NewPostUpdater(db *gorm.DB) PostUpdater {
	return PostUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Post{}),
	}
}

// ===== END of Post modifiers

// ===== BEGIN of query set UserQuerySet

// UserQuerySet is an queryset type for User
type UserQuerySet struct {
	db *gorm.DB
}

// NewUserQuerySet constructs new UserQuerySet
func NewUserQuerySet(db *gorm.DB) UserQuerySet {
	return UserQuerySet{
		db: db.Model(&User{}),
	}
}

func (qs UserQuerySet) w(db *gorm.DB) UserQuerySet {
	return NewUserQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) All(ret *[]User) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *User) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtEq(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtGt(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtGte(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtLt(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtLte(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtNe(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) Delete() error {
	return qs.db.Delete(User{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *User) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtEq(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtGt(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtGte(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtIsNotNull() UserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtIsNull() UserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtLt(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtLte(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtNe(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// EmailEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailEq(email string) UserQuerySet {
	return qs.w(qs.db.Where("email = ?", email))
}

// EmailIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailIn(email ...string) UserQuerySet {
	return qs.w(qs.db.Where("email IN (?)", email))
}

// EmailNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailNe(email string) UserQuerySet {
	return qs.w(qs.db.Where("email != ?", email))
}

// EmailNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailNotIn(email ...string) UserQuerySet {
	return qs.w(qs.db.Where("email NOT IN (?)", email))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) GetUpdater() UserUpdater {
	return NewUserUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDEq(ID uint) UserQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDGt(ID uint) UserQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDGte(ID uint) UserQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDIn(ID ...uint) UserQuerySet {
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDLt(ID uint) UserQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDLte(ID uint) UserQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDNe(ID uint) UserQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDNotIn(ID ...uint) UserQuerySet {
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) Limit(limit int) UserQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameEq(name string) UserQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameIn(name ...string) UserQuerySet {
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameNe(name string) UserQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameNotIn(name ...string) UserQuerySet {
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs UserQuerySet) One(ret *User) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByCreatedAt() UserQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByDeletedAt() UserQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByID() UserQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByUpdatedAt() UserQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByCreatedAt() UserQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByDeletedAt() UserQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByID() UserQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByUpdatedAt() UserQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetCreatedAt(createdAt time.Time) UserUpdater {
	u.fields[string(UserDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetDeletedAt(deletedAt *time.Time) UserUpdater {
	u.fields[string(UserDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetEmail is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetEmail(email string) UserUpdater {
	u.fields[string(UserDBSchema.Email)] = email
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetID(ID uint) UserUpdater {
	u.fields[string(UserDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetName(name string) UserUpdater {
	u.fields[string(UserDBSchema.Name)] = name
	return u
}

// SetSurname is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetSurname(surname *string) UserUpdater {
	u.fields[string(UserDBSchema.Surname)] = surname
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetUpdatedAt(updatedAt time.Time) UserUpdater {
	u.fields[string(UserDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SurnameEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SurnameEq(surname string) UserQuerySet {
	return qs.w(qs.db.Where("user_surname = ?", surname))
}

// SurnameIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SurnameIn(surname ...string) UserQuerySet {
	return qs.w(qs.db.Where("user_surname IN (?)", surname))
}

// SurnameIsNotNull is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SurnameIsNotNull() UserQuerySet {
	return qs.w(qs.db.Where("user_surname IS NOT NULL"))
}

// SurnameIsNull is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SurnameIsNull() UserQuerySet {
	return qs.w(qs.db.Where("user_surname IS NULL"))
}

// SurnameNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SurnameNe(surname string) UserQuerySet {
	return qs.w(qs.db.Where("user_surname != ?", surname))
}

// SurnameNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SurnameNotIn(surname ...string) UserQuerySet {
	return qs.w(qs.db.Where("user_surname NOT IN (?)", surname))
}

// Update is an autogenerated method
// nolint: dupl
func (u UserUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u UserUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtEq(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtGt(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtGte(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtLt(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtLte(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtNe(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set UserQuerySet

// ===== BEGIN of User modifiers

// UserDBSchemaField describes database schema field. It requires for method 'Update'
type UserDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f UserDBSchemaField) String() string {
	return string(f)
}

// UserDBSchema stores db field names of User
var UserDBSchema = struct {
	ID        UserDBSchemaField
	CreatedAt UserDBSchemaField
	UpdatedAt UserDBSchemaField
	DeletedAt UserDBSchemaField
	Name      UserDBSchemaField
	Surname   UserDBSchemaField
	Email     UserDBSchemaField
}{

	ID:        UserDBSchemaField("id"),
	CreatedAt: UserDBSchemaField("created_at"),
	UpdatedAt: UserDBSchemaField("updated_at"),
	DeletedAt: UserDBSchemaField("deleted_at"),
	Name:      UserDBSchemaField("name"),
	Surname:   UserDBSchemaField("user_surname"),
	Email:     UserDBSchemaField("email"),
}

// Update updates User fields by primary key
// nolint: dupl
func (o *User) Update(db *gorm.DB, fields ...UserDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":           o.ID,
		"created_at":   o.CreatedAt,
		"updated_at":   o.UpdatedAt,
		"deleted_at":   o.DeletedAt,
		"name":         o.Name,
		"user_surname": o.Surname,
		"email":        o.Email,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update User %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// UserUpdater is an User updates manager
type UserUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewUserUpdater creates new User updater
// nolint: dupl
func NewUserUpdater(db *gorm.DB) UserUpdater {
	return UserUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&User{}),
	}
}

// ===== END of User modifiers

// ===== END of all query sets
